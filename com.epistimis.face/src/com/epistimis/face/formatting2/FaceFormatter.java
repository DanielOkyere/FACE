/*
 * generated by Xtext 2.28.0
 */
package com.epistimis.face.formatting2;

import com.epistimis.face.face.ArchitectureModel;
import com.epistimis.face.face.IntegrationIntegrationModel;
import com.epistimis.face.face.UopElement;
import com.epistimis.face.face.UopUoPModel;
import com.epistimis.uddl.formatting2.UddlFormatter;
import com.epistimis.uddl.uddl.DataModel;
import org.eclipse.xtext.formatting2.IFormattableDocument;

public class FaceFormatter extends UddlFormatter {

	protected void format(ArchitectureModel architectureModel, IFormattableDocument doc) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (DataModel dataModel : architectureModel.getDm()) {
			doc.format(dataModel);
		}
		for (UopUoPModel uopUoPModel : architectureModel.getUm()) {
			doc.format(uopUoPModel);
		}
		for (IntegrationIntegrationModel integrationIntegrationModel : architectureModel.getIm()) {
			doc.format(integrationIntegrationModel);
		}
	}

	protected void format(UopUoPModel uopUoPModel, IFormattableDocument doc) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (UopUoPModel _uopUoPModel : uopUoPModel.getUm()) {
			doc.format(_uopUoPModel);
		}
		for (UopElement uopElement : uopUoPModel.getElement()) {
			doc.format(uopElement);
		}
	}
	
	// TODO: implement for UopAbstractUoP, UopUnitOfPortability, UopClientServerConnection, UopCompositeTemplate, IntegrationIntegrationModel, IntegrationIntegrationContext, IntegrationUoPInstance, IntegrationViewAggregation, IntegrationViewFilter, IntegrationViewSink, IntegrationViewSource, IntegrationViewTransformation, IntegrationViewTransporter
}
